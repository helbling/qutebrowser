// DO NOT EDIT THIS FILE DIRECTLY!
// It is autogenerated from docstrings by running:
//   $ python3 scripts/dev/src2asciidoc.py

= Settings

[options="header",width="75%",cols="25%,75%"]
|==============
|Setting|Description
|<<aliases,aliases>>|Aliases for commands.
|<<auto_save.config,auto_save.config>>|Whether to save the config automatically on quit.
|<<auto_save.interval,auto_save.interval>>|How often (in milliseconds) to auto-save config/cookies/etc.
|<<auto_save.session,auto_save.session>>|Whether to always save the open pages.
|<<bindings.commands,bindings.commands>>|Keybindings mapping keys to commands in different modes.
|<<bindings.default,bindings.default>>|Default keybindings. If you want to add bindings, modify `bindings.commands` instead.
|<<bindings.key_mappings,bindings.key_mappings>>|This setting can be used to map keys to other keys.
|<<colors.completion.category.bg,colors.completion.category.bg>>|Background color of the completion widget category headers.
|<<colors.completion.category.border.bottom,colors.completion.category.border.bottom>>|Bottom border color of the completion widget category headers.
|<<colors.completion.category.border.top,colors.completion.category.border.top>>|Top border color of the completion widget category headers.
|<<colors.completion.category.fg,colors.completion.category.fg>>|Foreground color of completion widget category headers.
|<<colors.completion.even.bg,colors.completion.even.bg>>|Background color of the completion widget for even rows.
|<<colors.completion.fg,colors.completion.fg>>|Text color of the completion widget.
|<<colors.completion.item.selected.bg,colors.completion.item.selected.bg>>|Background color of the selected completion item.
|<<colors.completion.item.selected.border.bottom,colors.completion.item.selected.border.bottom>>|Bottom border color of the selected completion item.
|<<colors.completion.item.selected.border.top,colors.completion.item.selected.border.top>>|Top border color of the completion widget category headers.
|<<colors.completion.item.selected.fg,colors.completion.item.selected.fg>>|Foreground color of the selected completion item.
|<<colors.completion.match.fg,colors.completion.match.fg>>|Foreground color of the matched text in the completion.
|<<colors.completion.odd.bg,colors.completion.odd.bg>>|Background color of the completion widget for odd rows.
|<<colors.completion.scrollbar.bg,colors.completion.scrollbar.bg>>|Color of the scrollbar in completion view
|<<colors.completion.scrollbar.fg,colors.completion.scrollbar.fg>>|Color of the scrollbar handle in completion view.
|<<colors.downloads.bar.bg,colors.downloads.bar.bg>>|Background color for the download bar.
|<<colors.downloads.error.bg,colors.downloads.error.bg>>|Background color for downloads with errors.
|<<colors.downloads.error.fg,colors.downloads.error.fg>>|Foreground color for downloads with errors.
|<<colors.downloads.start.bg,colors.downloads.start.bg>>|Color gradient start for download backgrounds.
|<<colors.downloads.start.fg,colors.downloads.start.fg>>|Color gradient start for download text.
|<<colors.downloads.stop.bg,colors.downloads.stop.bg>>|Color gradient stop for download backgrounds.
|<<colors.downloads.stop.fg,colors.downloads.stop.fg>>|Color gradient end for download text.
|<<colors.downloads.system.bg,colors.downloads.system.bg>>|Color gradient interpolation system for download backgrounds.
|<<colors.downloads.system.fg,colors.downloads.system.fg>>|Color gradient interpolation system for download text.
|<<colors.hints.bg,colors.hints.bg>>|Background color for hints. Note that you can use a `rgba(...)` value for transparency.
|<<colors.hints.fg,colors.hints.fg>>|Font color for hints.
|<<colors.hints.match.fg,colors.hints.match.fg>>|Font color for the matched part of hints.
|<<colors.keyhint.bg,colors.keyhint.bg>>|Background color of the keyhint widget.
|<<colors.keyhint.fg,colors.keyhint.fg>>|Text color for the keyhint widget.
|<<colors.keyhint.suffix.fg,colors.keyhint.suffix.fg>>|Highlight color for keys to complete the current keychain
|<<colors.messages.error.bg,colors.messages.error.bg>>|Background color of an error message.
|<<colors.messages.error.border,colors.messages.error.border>>|Border color of an error message.
|<<colors.messages.error.fg,colors.messages.error.fg>>|Foreground color of an error message.
|<<colors.messages.info.bg,colors.messages.info.bg>>|Background color of an info message.
|<<colors.messages.info.border,colors.messages.info.border>>|Border color of an info message.
|<<colors.messages.info.fg,colors.messages.info.fg>>|Foreground color an info message.
|<<colors.messages.warning.bg,colors.messages.warning.bg>>|Background color of a warning message.
|<<colors.messages.warning.border,colors.messages.warning.border>>|Border color of an error message.
|<<colors.messages.warning.fg,colors.messages.warning.fg>>|Foreground color a warning message.
|<<colors.prompts.bg,colors.prompts.bg>>|Background color for prompts.
|<<colors.prompts.fg,colors.prompts.fg>>|Foreground color for prompts.
|<<colors.prompts.selected.bg,colors.prompts.selected.bg>>|Background color for the selected item in filename prompts.
|<<colors.statusbar.caret.bg,colors.statusbar.caret.bg>>|Background color of the statusbar in caret mode.
|<<colors.statusbar.caret.fg,colors.statusbar.caret.fg>>|Foreground color of the statusbar in caret mode.
|<<colors.statusbar.caret.selection.bg,colors.statusbar.caret.selection.bg>>|Background color of the statusbar in caret mode with a selection
|<<colors.statusbar.caret.selection.fg,colors.statusbar.caret.selection.fg>>|Foreground color of the statusbar in caret mode with a selection
|<<colors.statusbar.command.bg,colors.statusbar.command.bg>>|Background color of the statusbar in command mode.
|<<colors.statusbar.command.fg,colors.statusbar.command.fg>>|Foreground color of the statusbar in command mode.
|<<colors.statusbar.command.private.bg,colors.statusbar.command.private.bg>>|Background color of the statusbar in private browsing + command mode.
|<<colors.statusbar.command.private.fg,colors.statusbar.command.private.fg>>|Foreground color of the statusbar in private browsing + command mode.
|<<colors.statusbar.insert.bg,colors.statusbar.insert.bg>>|Background color of the statusbar in insert mode.
|<<colors.statusbar.insert.fg,colors.statusbar.insert.fg>>|Foreground color of the statusbar in insert mode.
|<<colors.statusbar.normal.bg,colors.statusbar.normal.bg>>|Background color of the statusbar.
|<<colors.statusbar.normal.fg,colors.statusbar.normal.fg>>|Foreground color of the statusbar.
|<<colors.statusbar.private.bg,colors.statusbar.private.bg>>|Background color of the statusbar in private browsing mode.
|<<colors.statusbar.private.fg,colors.statusbar.private.fg>>|Foreground color of the statusbar in private browsing mode.
|<<colors.statusbar.progress.bg,colors.statusbar.progress.bg>>|Background color of the progress bar.
|<<colors.statusbar.url.error.fg,colors.statusbar.url.error.fg>>|Foreground color of the URL in the statusbar on error.
|<<colors.statusbar.url.fg,colors.statusbar.url.fg>>|Default foreground color of the URL in the statusbar.
|<<colors.statusbar.url.hover.fg,colors.statusbar.url.hover.fg>>|Foreground color of the URL in the statusbar for hovered links.
|<<colors.statusbar.url.success.http.fg,colors.statusbar.url.success.http.fg>>|Foreground color of the URL in the statusbar on successful load (http).
|<<colors.statusbar.url.success.https.fg,colors.statusbar.url.success.https.fg>>|Foreground color of the URL in the statusbar on successful load (https).
|<<colors.statusbar.url.warn.fg,colors.statusbar.url.warn.fg>>|Foreground color of the URL in the statusbar when there's a warning.
|<<colors.tabs.bar.bg,colors.tabs.bar.bg>>|Background color of the tab bar.
|<<colors.tabs.even.bg,colors.tabs.even.bg>>|Background color of unselected even tabs.
|<<colors.tabs.even.fg,colors.tabs.even.fg>>|Foreground color of unselected even tabs.
|<<colors.tabs.indicator.error,colors.tabs.indicator.error>>|Color for the tab indicator on errors..
|<<colors.tabs.indicator.start,colors.tabs.indicator.start>>|Color gradient start for the tab indicator.
|<<colors.tabs.indicator.stop,colors.tabs.indicator.stop>>|Color gradient end for the tab indicator.
|<<colors.tabs.indicator.system,colors.tabs.indicator.system>>|Color gradient interpolation system for the tab indicator.
|<<colors.tabs.odd.bg,colors.tabs.odd.bg>>|Background color of unselected odd tabs.
|<<colors.tabs.odd.fg,colors.tabs.odd.fg>>|Foreground color of unselected odd tabs.
|<<colors.tabs.selected.even.bg,colors.tabs.selected.even.bg>>|Background color of selected even tabs.
|<<colors.tabs.selected.even.fg,colors.tabs.selected.even.fg>>|Foreground color of selected even tabs.
|<<colors.tabs.selected.odd.bg,colors.tabs.selected.odd.bg>>|Background color of selected odd tabs.
|<<colors.tabs.selected.odd.fg,colors.tabs.selected.odd.fg>>|Foreground color of selected odd tabs.
|<<colors.webpage.bg,colors.webpage.bg>>|Background color for webpages if unset (or empty to use the theme's color)
|<<completion.cmd_history_max_items,completion.cmd_history_max_items>>|How many commands to save in the command history.
|<<completion.height,completion.height>>|The height of the completion, in px or as percentage of the window.
|<<completion.quick,completion.quick>>|Whether to move on to the next part when there's only one possible completion left.
|<<completion.scrollbar.padding,completion.scrollbar.padding>>|Padding of scrollbar handle in completion window (in px).
|<<completion.scrollbar.width,completion.scrollbar.width>>|Width of the scrollbar in the completion window (in px).
|<<completion.show,completion.show>>|When to show the autocompletion window.
|<<completion.shrink,completion.shrink>>|Whether to shrink the completion to be smaller than the configured size if there are no scrollbars.
|<<completion.timestamp_format,completion.timestamp_format>>|How to format timestamps (e.g. for history)
|<<completion.web_history_max_items,completion.web_history_max_items>>|How many URLs to show in the web history.
|<<confirm_quit,confirm_quit>>|Whether to confirm quitting the application.
|<<content.accept_language,content.accept_language>>|Value to send in the `accept-language` header.
|<<content.cache.appcache,content.cache.appcache>>|Whether support for the HTML 5 web application cache feature is enabled.
|<<content.cache.maximum_pages,content.cache.maximum_pages>>|The maximum number of pages to hold in the global memory page cache.
|<<content.cache.size,content.cache.size>>|Size of the HTTP network cache. Empty to use the default value.
|<<content.cookies.accept,content.cookies.accept>>|Control which cookies to accept.
|<<content.cookies.store,content.cookies.store>>|Whether to store cookies. Note this option needs a restart with QtWebEngine on Qt < 5.9.
|<<content.default_encoding,content.default_encoding>>|Default encoding to use for websites.
|<<content.developer_extras,content.developer_extras>>|Enable extra tools for Web developers.
|<<content.dns_prefetch,content.dns_prefetch>>|Whether to try to pre-fetch DNS entries to speed up browsing.
|<<content.frame_flattening,content.frame_flattening>>|Whether to  expand each subframe to its contents.
|<<content.geolocation,content.geolocation>>|Allow websites to request geolocations.
|<<content.headers.custom,content.headers.custom>>|Set custom headers for qutebrowser HTTP requests.
|<<content.headers.do_not_track,content.headers.do_not_track>>|Value to send in the `DNT` header.
|<<content.headers.referer,content.headers.referer>>|Send the Referer header
|<<content.headers.user_agent,content.headers.user_agent>>|User agent to send. Unset to send the default.
|<<content.host_blocking.enabled,content.host_blocking.enabled>>|Whether host blocking is enabled.
|<<content.host_blocking.lists,content.host_blocking.lists>>|List of URLs of lists which contain hosts to block.
|<<content.host_blocking.whitelist,content.host_blocking.whitelist>>|List of domains that should always be loaded, despite being ad-blocked.
|<<content.hyperlink_auditing,content.hyperlink_auditing>>|Enable or disable hyperlink auditing (`<a ping>`).
|<<content.images,content.images>>|Whether images are automatically loaded in web pages.
|<<content.javascript.alert,content.javascript.alert>>|Show javascript alerts.
|<<content.javascript.can_access_clipboard,content.javascript.can_access_clipboard>>|Whether JavaScript programs can read or write to the clipboard.
|<<content.javascript.can_close_windows,content.javascript.can_close_windows>>|Whether JavaScript programs can close windows.
|<<content.javascript.can_open_windows_automatically,content.javascript.can_open_windows_automatically>>|Whether JavaScript programs can open new windows without user interaction.
|<<content.javascript.enabled,content.javascript.enabled>>|Enables or disables the running of JavaScript programs.
|<<content.javascript.log,content.javascript.log>>|How to log javascript console messages.
|<<content.javascript.modal_dialog,content.javascript.modal_dialog>>|Use the standard JavaScript modal dialog for `alert()` and `confirm()`
|<<content.javascript.prompt,content.javascript.prompt>>|Show javascript prompts.
|<<content.local_content_can_access_file_urls,content.local_content_can_access_file_urls>>|Whether locally loaded documents are allowed to access other local urls.
|<<content.local_content_can_access_remote_urls,content.local_content_can_access_remote_urls>>|Whether locally loaded documents are allowed to access remote urls.
|<<content.local_storage,content.local_storage>>|Whether support for HTML 5 local storage and Web SQL is enabled.
|<<content.media_capture,content.media_capture>>|Allow websites to record audio/video.
|<<content.netrc_file,content.netrc_file>>|Location of a netrc-file for HTTP authentication.
|<<content.notifications,content.notifications>>|Allow websites to show notifications.
|<<content.pdfjs,content.pdfjs>>|Enable pdf.js to view PDF files in the browser.
|<<content.plugins,content.plugins>>|Enables or disables plugins in Web pages.
|<<content.print_element_backgrounds,content.print_element_backgrounds>>|Whether the background color and images are also drawn when the page is printed.
|<<content.private_browsing,content.private_browsing>>|Open new windows in private browsing mode which does not record visited pages.
|<<content.proxy,content.proxy>>|The proxy to use.
|<<content.proxy_dns_requests,content.proxy_dns_requests>>|Whether to send DNS requests over the configured proxy.
|<<content.ssl_strict,content.ssl_strict>>|Whether to validate SSL handshakes.
|<<content.user_stylesheet,content.user_stylesheet>>|User stylesheet to use (absolute filename or filename relative to the config directory). Will expand environment variables.
|<<content.webgl,content.webgl>>|Enables or disables WebGL.
|<<content.xss_auditing,content.xss_auditing>>|Whether load requests should be monitored for cross-site scripting attempts.
|<<downloads.location.directory,downloads.location.directory>>|The directory to save downloads to.
|<<downloads.location.prompt,downloads.location.prompt>>|Whether to prompt the user for the download location.
|<<downloads.location.remember,downloads.location.remember>>|Whether to remember the last used download directory.
|<<downloads.location.suggestion,downloads.location.suggestion>>|What to display in the download filename input.
|<<downloads.open_dispatcher,downloads.open_dispatcher>>|The default program used to open downloads. If unset, the default internal handler is used.
|<<downloads.position,downloads.position>>|Where to show the downloaded files.
|<<downloads.remove_finished,downloads.remove_finished>>|Number of milliseconds to wait before removing finished downloads. Will not be removed if value is -1.
|<<editor.command,editor.command>>|The editor (and arguments) to use for the `open-editor` command.
|<<editor.encoding,editor.encoding>>|Encoding to use for the editor.
|<<fonts.completion.category,fonts.completion.category>>|Font used in the completion categories.
|<<fonts.completion.entry,fonts.completion.entry>>|Font used in the completion widget.
|<<fonts.debug_console,fonts.debug_console>>|Font used for the debugging console.
|<<fonts.downloads,fonts.downloads>>|Font used for the downloadbar.
|<<fonts.hints,fonts.hints>>|Font used for the hints.
|<<fonts.keyhint,fonts.keyhint>>|Font used in the keyhint widget.
|<<fonts.messages.error,fonts.messages.error>>|Font used for error messages.
|<<fonts.messages.info,fonts.messages.info>>|Font used for info messages.
|<<fonts.messages.warning,fonts.messages.warning>>|Font used for warning messages.
|<<fonts.monospace,fonts.monospace>>|Default monospace fonts.
|<<fonts.prompts,fonts.prompts>>|Font used for prompts.
|<<fonts.statusbar,fonts.statusbar>>|Font used in the statusbar.
|<<fonts.tabs,fonts.tabs>>|Font used in the tab bar.
|<<fonts.web.family.cursive,fonts.web.family.cursive>>|Font family for cursive fonts.
|<<fonts.web.family.fantasy,fonts.web.family.fantasy>>|Font family for fantasy fonts.
|<<fonts.web.family.fixed,fonts.web.family.fixed>>|Font family for fixed fonts.
|<<fonts.web.family.sans_serif,fonts.web.family.sans_serif>>|Font family for sans-serif fonts.
|<<fonts.web.family.serif,fonts.web.family.serif>>|Font family for serif fonts.
|<<fonts.web.family.standard,fonts.web.family.standard>>|Font family for standard fonts.
|<<fonts.web.size.default,fonts.web.size.default>>|The default font size for regular text.
|<<fonts.web.size.default_fixed,fonts.web.size.default_fixed>>|The default font size for fixed-pitch text.
|<<fonts.web.size.minimum,fonts.web.size.minimum>>|The hard minimum font size.
|<<fonts.web.size.minimum_logical,fonts.web.size.minimum_logical>>|The minimum logical font size that is applied when zooming out.
|<<hints.auto_follow,hints.auto_follow>>|Controls when a hint can be automatically followed without the user pressing Enter.
|<<hints.auto_follow_timeout,hints.auto_follow_timeout>>|A timeout (in milliseconds) to inhibit normal-mode key bindings after a successful auto-follow.
|<<hints.border,hints.border>>|CSS border value for hints.
|<<hints.chars,hints.chars>>|Chars used for hint strings.
|<<hints.dictionary,hints.dictionary>>|The dictionary file to be used by the word hints.
|<<hints.find_implementation,hints.find_implementation>>|Which implementation to use to find elements to hint.
|<<hints.hide_unmatched_rapid_hints,hints.hide_unmatched_rapid_hints>>|Controls hiding unmatched hints in rapid mode.
|<<hints.min_chars,hints.min_chars>>|Minimum number of chars used for hint strings.
|<<hints.mode,hints.mode>>|Mode to use for hints.
|<<hints.next_regexes,hints.next_regexes>>|A comma-separated list of regexes to use for 'next' links.
|<<hints.prev_regexes,hints.prev_regexes>>|A comma-separated list of regexes to use for 'prev' links.
|<<hints.scatter,hints.scatter>>|Whether to scatter hint key chains (like Vimium) or not (like dwb). Ignored for number hints.
|<<hints.uppercase,hints.uppercase>>|Make chars in hint strings uppercase.
|<<history_session_interval,history_session_interval>>|The maximum time in minutes between two history items for them to be considered being from the same session. Use -1 to disable separation.
|<<ignore_case,ignore_case>>|Whether to find text on a page case-insensitively.
|<<input.ambiguous_timeout,input.ambiguous_timeout>>|Timeout (in milliseconds) for ambiguous key bindings.
|<<input.forward_unbound_keys,input.forward_unbound_keys>>|Whether to forward unbound keys to the webview in normal mode.
|<<input.insert_mode.auto_leave,input.insert_mode.auto_leave>>|Whether to leave insert mode if a non-editable element is clicked.
|<<input.insert_mode.auto_load,input.insert_mode.auto_load>>|Whether to automatically enter insert mode if an editable element is focused after page load.
|<<input.insert_mode.plugins,input.insert_mode.plugins>>|Whether to switch to insert mode when clicking flash and other plugins.
|<<input.links_included_in_focus_chain,input.links_included_in_focus_chain>>|Whether hyperlinks should be included in the keyboard focus chain.
|<<input.partial_timeout,input.partial_timeout>>|Timeout (in milliseconds) for partially typed key bindings.
|<<input.rocker_gestures,input.rocker_gestures>>|Whether to enable Opera-like mouse rocker gestures. This disables the context menu.
|<<input.spatial_navigation,input.spatial_navigation>>|Enables or disables the Spatial Navigation feature.
|<<keyhint.blacklist,keyhint.blacklist>>|Keychains that shouldn\'t be shown in the keyhint dialog.
|<<keyhint.delay,keyhint.delay>>|Time from pressing a key to seeing the keyhint dialog (ms)
|<<messages.timeout,messages.timeout>>|Time (in ms) to show messages in the statusbar for.
|<<messages.unfocused,messages.unfocused>>|Whether to show messages in unfocused windows.
|<<prompt.filebrowser,prompt.filebrowser>>|Show a filebrowser in upload/download prompts.
|<<prompt.radius,prompt.radius>>|The rounding radius for the edges of prompts.
|<<scrolling.bar,scrolling.bar>>|Show a scrollbar.
|<<scrolling.smooth,scrolling.smooth>>|Whether to enable smooth scrolling for web pages. Note smooth scrolling does not work with the `:scroll-px` command.
|<<session_default_name,session_default_name>>|The name of the session to save by default, or unset for the last loaded session.
|<<statusbar.hide,statusbar.hide>>|Whether to hide the statusbar unless a message is shown.
|<<statusbar.padding,statusbar.padding>>|Padding for the statusbar.
|<<statusbar.position,statusbar.position>>|The position of the status bar.
|<<tabs.background,tabs.background>>|Whether to open new tabs (middleclick/ctrl+click) in background.
|<<tabs.close_mouse_button,tabs.close_mouse_button>>|On which mouse button to close tabs.
|<<tabs.favicons.scale,tabs.favicons.scale>>|Scale for favicons in the tab bar. The tab size is unchanged, so big favicons also require extra `tabs.padding`.
|<<tabs.favicons.show,tabs.favicons.show>>|Whether to show favicons in the tab bar.
|<<tabs.indicator_padding,tabs.indicator_padding>>|Padding for indicators
|<<tabs.last_close,tabs.last_close>>|Behavior when the last tab is closed.
|<<tabs.mousewheel_switching,tabs.mousewheel_switching>>|Switch between tabs using the mouse wheel.
|<<tabs.new_position.related,tabs.new_position.related>>|How new tabs opened from another tab are positioned.
|<<tabs.new_position.unrelated,tabs.new_position.unrelated>>|How new tabs which aren't opened from another tab are positioned.
|<<tabs.padding,tabs.padding>>|Padding for tabs
|<<tabs.position,tabs.position>>|The position of the tab bar.
|<<tabs.select_on_remove,tabs.select_on_remove>>|Which tab to select when the focused tab is removed.
|<<tabs.show,tabs.show>>|When to show the tab bar.
|<<tabs.show_switching_delay,tabs.show_switching_delay>>|Time to show the tab bar before hiding it when tabs.show is set to 'switching'.
|<<tabs.tabs_are_windows,tabs.tabs_are_windows>>|Whether to open windows instead of tabs.
|<<tabs.title.alignment,tabs.title.alignment>>|Alignment of the text inside of tabs
|<<tabs.title.format,tabs.title.format>>|The format to use for the tab title. The following placeholders are defined:
|<<tabs.title.format_pinned,tabs.title.format_pinned>>|The format to use for the tab title for pinned tabs. The same placeholders like for title-format are defined.
|<<tabs.width.bar,tabs.width.bar>>|The width of the tab bar if it's vertical, in px or as percentage of the window.
|<<tabs.width.indicator,tabs.width.indicator>>|Width of the progress indicator (0 to disable).
|<<tabs.width.pinned,tabs.width.pinned>>|The width for pinned tabs with a horizontal tabbar, in px.
|<<tabs.wrap,tabs.wrap>>|Whether to wrap when changing tabs.
|<<url.auto_search,url.auto_search>>|Whether to start a search when something else than a URL is entered.
|<<url.default_page,url.default_page>>|The page to open if :open -t/-b/-w is used without URL. Use `about:blank` for a blank page.
|<<url.incdec_segments,url.incdec_segments>>|The URL segments where `:navigate increment/decrement` will search for a number.
|<<url.new_instance_open_target,url.new_instance_open_target>>|How to open links in an existing instance if a new one is launched.
|<<url.new_instance_open_target_window,url.new_instance_open_target_window>>|Which window to choose when opening links as new tabs.
|<<url.searchengines,url.searchengines>>|Definitions of search engines which can be used via the address bar.
|<<url.start_pages,url.start_pages>>|The default page(s) to open at the start.
|<<url.yank_ignored_parameters,url.yank_ignored_parameters>>|The URL parameters to strip with :yank url.
|<<window.hide_wayland_decoration,window.hide_wayland_decoration>>|Hide the window decoration when using wayland (requires restart)
|<<window.title_format,window.title_format>>|The format to use for the window title. The following placeholders are defined:
|<<zoom.default,zoom.default>>|The default zoom level.
|<<zoom.levels,zoom.levels>>|The available zoom levels.
|<<zoom.mouse_divider,zoom.mouse_divider>>|How much to divide the mouse wheel movements to translate them into zoom increments.
|<<zoom.text_only,zoom.text_only>>|Whether the zoom factor on a frame applies only to the text or to all content.
|==============

[[aliases]]
== aliases
Aliases for commands.

Default: +pass:[{&quot;w&quot;: &quot;session-save&quot;, &quot;q&quot;: &quot;quit&quot;, &quot;wq&quot;: &quot;quit --save&quot;}]+

[[auto_save.config]]
== auto_save.config
Whether to save the config automatically on quit.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[auto_save.interval]]
== auto_save.interval
How often (in milliseconds) to auto-save config/cookies/etc.

Default: +pass:[15000]+

[[auto_save.session]]
== auto_save.session
Whether to always save the open pages.

Valid values:

 * +true+
 * +false+

Default: empty

[[bindings.commands]]
== bindings.commands
Keybindings mapping keys to commands in different modes.
This setting is a dictionary containing mode names and dictionaries mapping keys to commands:
`{mode: {key: command}}`
If you want to map a key to another key, check the `bindings.key_mappings` setting instead.
For special keys (can't be part of a keychain), enclose them in `<`...`>`. For modifiers, you can use either `-` or `+` as delimiters, and these names:

  * Control: `Control`, `Ctrl`

  * Meta:    `Meta`, `Windows`, `Mod4`

  * Alt:     `Alt`, `Mod1`

  * Shift:   `Shift`

For simple keys (no `<>`-signs), a capital letter means the key is pressed with Shift. For special keys (with `<>`-signs), you need to explicitly add `Shift-` to match a key pressed with shift.
If you want a binding to do nothing, bind it to the `nop` command. If you want a default binding to be passed through to the website, bind it to null.
Note that some commands which are only useful for bindings (but not used interactively) are hidden from the command completion. See `:help` for a full list of available commands.
The following modes are available:
* normal: The default mode, where most commands are invoked.
* insert: Entered when an input field is focused on a website, or by
  pressing `i` in normal mode. Passes through almost all keypresses to the
  website, but has some bindings like `<Ctrl-e>` to open an external editor.
  Note that single keys can't be bound in this mode.

* hint: Entered when `f` is pressed to select links with the keyboard. Note
  that single keys can't be bound in this mode.

* passthrough: Similar to insert mode, but passes through all keypresses
  except `<Escape>` to leave the mode. It might be useful to bind `<Escape>`
  to some other key in this mode if you want to be able to send an Escape
  key to the website as well. Note that single keys can't be bound in this
  mode.

* command: Entered when pressing the `:` key in order to enter a command.
  Note that single keys can't be bound in this mode.

* prompt: Entered when there's a prompt to display, like for download
  locations or when invoked from JavaScript.

  You can bind normal keys in this mode, but they will be only active when a
  yes/no-prompt is asked. For other prompt modes, you can only bind special
  keys.

* caret: Entered when pressing the `v` mode, used to select text using the
  keyboard.

* register: Entered when qutebrowser is waiting for a register name/key for
  commands like `:set-mark`.

Default: empty

[[bindings.default]]
== bindings.default
Default keybindings. If you want to add bindings, modify `bindings.commands` instead.
The main purpose of this setting is that you can set it to an empty dictionary if you want to load no default keybindings at all.
If you want to preserve default bindings (and get new bindings when there is an update), add new bindings to `bindings.commands` (or use `:bind`) and leave this setting alone.


[[bindings.key_mappings]]
== bindings.key_mappings
This setting can be used to map keys to other keys.
When the key used as dictionary-key is pressed, the binding for the key used as dictionary-value is invoked instead.
This is useful for global remappings of keys, for example to map Ctrl-[ to Escape.

Default: +pass:[{&quot;&lt;Ctrl-[&gt;&quot;: &quot;&lt;Escape&gt;&quot;, &quot;&lt;Ctrl-6&gt;&quot;: &quot;&lt;Ctrl-^&gt;&quot;, &quot;&lt;Ctrl-M&gt;&quot;: &quot;&lt;Return&gt;&quot;, &quot;&lt;Ctrl-J&gt;&quot;: &quot;&lt;Return&gt;&quot;, &quot;&lt;Shift-Return&gt;&quot;: &quot;&lt;Return&gt;&quot;, &quot;&lt;Enter&gt;&quot;: &quot;&lt;Return&gt;&quot;, &quot;&lt;Shift-Enter&gt;&quot;: &quot;&lt;Return&gt;&quot;, &quot;&lt;Ctrl-Enter&gt;&quot;: &quot;&lt;Ctrl-Return&gt;&quot;}]+

[[colors.completion.category.bg]]
== colors.completion.category.bg
Background color of the completion widget category headers.

Default: +pass:[qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #888888, stop:1 #505050)]+

[[colors.completion.category.border.bottom]]
== colors.completion.category.border.bottom
Bottom border color of the completion widget category headers.

Default: +pass:[black]+

[[colors.completion.category.border.top]]
== colors.completion.category.border.top
Top border color of the completion widget category headers.

Default: +pass:[black]+

[[colors.completion.category.fg]]
== colors.completion.category.fg
Foreground color of completion widget category headers.

Default: +pass:[white]+

[[colors.completion.even.bg]]
== colors.completion.even.bg
Background color of the completion widget for even rows.

Default: +pass:[#333333]+

[[colors.completion.fg]]
== colors.completion.fg
Text color of the completion widget.

Default: +pass:[white]+

[[colors.completion.item.selected.bg]]
== colors.completion.item.selected.bg
Background color of the selected completion item.

Default: +pass:[#e8c000]+

[[colors.completion.item.selected.border.bottom]]
== colors.completion.item.selected.border.bottom
Bottom border color of the selected completion item.

Default: +pass:[#bbbb00]+

[[colors.completion.item.selected.border.top]]
== colors.completion.item.selected.border.top
Top border color of the completion widget category headers.

Default: +pass:[#bbbb00]+

[[colors.completion.item.selected.fg]]
== colors.completion.item.selected.fg
Foreground color of the selected completion item.

Default: +pass:[black]+

[[colors.completion.match.fg]]
== colors.completion.match.fg
Foreground color of the matched text in the completion.

Default: +pass:[#ff4444]+

[[colors.completion.odd.bg]]
== colors.completion.odd.bg
Background color of the completion widget for odd rows.

Default: +pass:[#444444]+

[[colors.completion.scrollbar.bg]]
== colors.completion.scrollbar.bg
Color of the scrollbar in completion view

Default: +pass:[#333333]+

[[colors.completion.scrollbar.fg]]
== colors.completion.scrollbar.fg
Color of the scrollbar handle in completion view.

Default: +pass:[white]+

[[colors.downloads.bar.bg]]
== colors.downloads.bar.bg
Background color for the download bar.

Default: +pass:[black]+

[[colors.downloads.error.bg]]
== colors.downloads.error.bg
Background color for downloads with errors.

Default: +pass:[red]+

[[colors.downloads.error.fg]]
== colors.downloads.error.fg
Foreground color for downloads with errors.

Default: +pass:[white]+

[[colors.downloads.start.bg]]
== colors.downloads.start.bg
Color gradient start for download backgrounds.

Default: +pass:[#0000aa]+

[[colors.downloads.start.fg]]
== colors.downloads.start.fg
Color gradient start for download text.

Default: +pass:[white]+

[[colors.downloads.stop.bg]]
== colors.downloads.stop.bg
Color gradient stop for download backgrounds.

Default: +pass:[#00aa00]+

[[colors.downloads.stop.fg]]
== colors.downloads.stop.fg
Color gradient end for download text.

Default: +pass:[white]+

[[colors.downloads.system.bg]]
== colors.downloads.system.bg
Color gradient interpolation system for download backgrounds.

Valid values:

 * +rgb+: Interpolate in the RGB color system.
 * +hsv+: Interpolate in the HSV color system.
 * +hsl+: Interpolate in the HSL color system.
 * +none+: Don't show a gradient.

Default: +pass:[rgb]+

[[colors.downloads.system.fg]]
== colors.downloads.system.fg
Color gradient interpolation system for download text.

Valid values:

 * +rgb+: Interpolate in the RGB color system.
 * +hsv+: Interpolate in the HSV color system.
 * +hsl+: Interpolate in the HSL color system.
 * +none+: Don't show a gradient.

Default: +pass:[rgb]+

[[colors.hints.bg]]
== colors.hints.bg
Background color for hints. Note that you can use a `rgba(...)` value for transparency.

Default: +pass:[qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(255, 247, 133, 0.8), stop:1 rgba(255, 197, 66, 0.8))]+

[[colors.hints.fg]]
== colors.hints.fg
Font color for hints.

Default: +pass:[black]+

[[colors.hints.match.fg]]
== colors.hints.match.fg
Font color for the matched part of hints.

Default: +pass:[green]+

[[colors.keyhint.bg]]
== colors.keyhint.bg
Background color of the keyhint widget.

Default: +pass:[rgba(0, 0, 0, 80%)]+

[[colors.keyhint.fg]]
== colors.keyhint.fg
Text color for the keyhint widget.

Default: +pass:[#FFFFFF]+

[[colors.keyhint.suffix.fg]]
== colors.keyhint.suffix.fg
Highlight color for keys to complete the current keychain

Default: +pass:[#FFFF00]+

[[colors.messages.error.bg]]
== colors.messages.error.bg
Background color of an error message.

Default: +pass:[red]+

[[colors.messages.error.border]]
== colors.messages.error.border
Border color of an error message.

Default: +pass:[#bb0000]+

[[colors.messages.error.fg]]
== colors.messages.error.fg
Foreground color of an error message.

Default: +pass:[white]+

[[colors.messages.info.bg]]
== colors.messages.info.bg
Background color of an info message.

Default: +pass:[black]+

[[colors.messages.info.border]]
== colors.messages.info.border
Border color of an info message.

Default: +pass:[#333333]+

[[colors.messages.info.fg]]
== colors.messages.info.fg
Foreground color an info message.

Default: +pass:[white]+

[[colors.messages.warning.bg]]
== colors.messages.warning.bg
Background color of a warning message.

Default: +pass:[darkorange]+

[[colors.messages.warning.border]]
== colors.messages.warning.border
Border color of an error message.

Default: +pass:[#d47300]+

[[colors.messages.warning.fg]]
== colors.messages.warning.fg
Foreground color a warning message.

Default: +pass:[white]+

[[colors.prompts.bg]]
== colors.prompts.bg
Background color for prompts.

Default: +pass:[darkblue]+

[[colors.prompts.fg]]
== colors.prompts.fg
Foreground color for prompts.

Default: +pass:[white]+

[[colors.prompts.selected.bg]]
== colors.prompts.selected.bg
Background color for the selected item in filename prompts.

Default: +pass:[#308cc6]+

[[colors.statusbar.caret.bg]]
== colors.statusbar.caret.bg
Background color of the statusbar in caret mode.

Default: +pass:[purple]+

[[colors.statusbar.caret.fg]]
== colors.statusbar.caret.fg
Foreground color of the statusbar in caret mode.

Default: +pass:[white]+

[[colors.statusbar.caret.selection.bg]]
== colors.statusbar.caret.selection.bg
Background color of the statusbar in caret mode with a selection

Default: +pass:[#a12dff]+

[[colors.statusbar.caret.selection.fg]]
== colors.statusbar.caret.selection.fg
Foreground color of the statusbar in caret mode with a selection

Default: +pass:[white]+

[[colors.statusbar.command.bg]]
== colors.statusbar.command.bg
Background color of the statusbar in command mode.

Default: +pass:[black]+

[[colors.statusbar.command.fg]]
== colors.statusbar.command.fg
Foreground color of the statusbar in command mode.

Default: +pass:[white]+

[[colors.statusbar.command.private.bg]]
== colors.statusbar.command.private.bg
Background color of the statusbar in private browsing + command mode.

Default: +pass:[grey]+

[[colors.statusbar.command.private.fg]]
== colors.statusbar.command.private.fg
Foreground color of the statusbar in private browsing + command mode.

Default: +pass:[white]+

[[colors.statusbar.insert.bg]]
== colors.statusbar.insert.bg
Background color of the statusbar in insert mode.

Default: +pass:[darkgreen]+

[[colors.statusbar.insert.fg]]
== colors.statusbar.insert.fg
Foreground color of the statusbar in insert mode.

Default: +pass:[white]+

[[colors.statusbar.normal.bg]]
== colors.statusbar.normal.bg
Background color of the statusbar.

Default: +pass:[black]+

[[colors.statusbar.normal.fg]]
== colors.statusbar.normal.fg
Foreground color of the statusbar.

Default: +pass:[white]+

[[colors.statusbar.private.bg]]
== colors.statusbar.private.bg
Background color of the statusbar in private browsing mode.

Default: +pass:[#666666]+

[[colors.statusbar.private.fg]]
== colors.statusbar.private.fg
Foreground color of the statusbar in private browsing mode.

Default: +pass:[white]+

[[colors.statusbar.progress.bg]]
== colors.statusbar.progress.bg
Background color of the progress bar.

Default: +pass:[white]+

[[colors.statusbar.url.error.fg]]
== colors.statusbar.url.error.fg
Foreground color of the URL in the statusbar on error.

Default: +pass:[orange]+

[[colors.statusbar.url.fg]]
== colors.statusbar.url.fg
Default foreground color of the URL in the statusbar.

Default: +pass:[white]+

[[colors.statusbar.url.hover.fg]]
== colors.statusbar.url.hover.fg
Foreground color of the URL in the statusbar for hovered links.

Default: +pass:[aqua]+

[[colors.statusbar.url.success.http.fg]]
== colors.statusbar.url.success.http.fg
Foreground color of the URL in the statusbar on successful load (http).

Default: +pass:[white]+

[[colors.statusbar.url.success.https.fg]]
== colors.statusbar.url.success.https.fg
Foreground color of the URL in the statusbar on successful load (https).

Default: +pass:[lime]+

[[colors.statusbar.url.warn.fg]]
== colors.statusbar.url.warn.fg
Foreground color of the URL in the statusbar when there's a warning.

Default: +pass:[yellow]+

[[colors.tabs.bar.bg]]
== colors.tabs.bar.bg
Background color of the tab bar.

Default: +pass:[#555555]+

[[colors.tabs.even.bg]]
== colors.tabs.even.bg
Background color of unselected even tabs.

Default: +pass:[darkgrey]+

[[colors.tabs.even.fg]]
== colors.tabs.even.fg
Foreground color of unselected even tabs.

Default: +pass:[white]+

[[colors.tabs.indicator.error]]
== colors.tabs.indicator.error
Color for the tab indicator on errors..

Default: +pass:[#ff0000]+

[[colors.tabs.indicator.start]]
== colors.tabs.indicator.start
Color gradient start for the tab indicator.

Default: +pass:[#0000aa]+

[[colors.tabs.indicator.stop]]
== colors.tabs.indicator.stop
Color gradient end for the tab indicator.

Default: +pass:[#00aa00]+

[[colors.tabs.indicator.system]]
== colors.tabs.indicator.system
Color gradient interpolation system for the tab indicator.

Valid values:

 * +rgb+: Interpolate in the RGB color system.
 * +hsv+: Interpolate in the HSV color system.
 * +hsl+: Interpolate in the HSL color system.
 * +none+: Don't show a gradient.

Default: +pass:[rgb]+

[[colors.tabs.odd.bg]]
== colors.tabs.odd.bg
Background color of unselected odd tabs.

Default: +pass:[grey]+

[[colors.tabs.odd.fg]]
== colors.tabs.odd.fg
Foreground color of unselected odd tabs.

Default: +pass:[white]+

[[colors.tabs.selected.even.bg]]
== colors.tabs.selected.even.bg
Background color of selected even tabs.

Default: +pass:[black]+

[[colors.tabs.selected.even.fg]]
== colors.tabs.selected.even.fg
Foreground color of selected even tabs.

Default: +pass:[white]+

[[colors.tabs.selected.odd.bg]]
== colors.tabs.selected.odd.bg
Background color of selected odd tabs.

Default: +pass:[black]+

[[colors.tabs.selected.odd.fg]]
== colors.tabs.selected.odd.fg
Foreground color of selected odd tabs.

Default: +pass:[white]+

[[colors.webpage.bg]]
== colors.webpage.bg
Background color for webpages if unset (or empty to use the theme's color)

Default: +pass:[white]+

[[completion.cmd_history_max_items]]
== completion.cmd_history_max_items
How many commands to save in the command history.
0: no history / -1: unlimited

Default: +pass:[100]+

[[completion.height]]
== completion.height
The height of the completion, in px or as percentage of the window.

Default: +pass:[50%]+

[[completion.quick]]
== completion.quick
Whether to move on to the next part when there's only one possible completion left.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[completion.scrollbar.padding]]
== completion.scrollbar.padding
Padding of scrollbar handle in completion window (in px).

Default: +pass:[2]+

[[completion.scrollbar.width]]
== completion.scrollbar.width
Width of the scrollbar in the completion window (in px).

Default: +pass:[12]+

[[completion.show]]
== completion.show
When to show the autocompletion window.

Valid values:

 * +always+: Whenever a completion is available.
 * +auto+: Whenever a completion is requested.
 * +never+: Never.

Default: +pass:[always]+

[[completion.shrink]]
== completion.shrink
Whether to shrink the completion to be smaller than the configured size if there are no scrollbars.

Valid values:

 * +true+
 * +false+

Default: empty

[[completion.timestamp_format]]
== completion.timestamp_format
How to format timestamps (e.g. for history)

Default: +pass:[%Y-%m-%d]+

[[completion.web_history_max_items]]
== completion.web_history_max_items
How many URLs to show in the web history.
0: no history / -1: unlimited

Default: +pass:[1000]+

[[confirm_quit]]
== confirm_quit
Whether to confirm quitting the application.

Valid values:

 * +always+: Always show a confirmation.
 * +multiple-tabs+: Show a confirmation if multiple tabs are opened.
 * +downloads+: Show a confirmation if downloads are running
 * +never+: Never show a confirmation.

Default: +pass:[[&quot;never&quot;]]+

[[content.accept_language]]
== content.accept_language
Value to send in the `accept-language` header.

Default: +pass:[en-US,en]+

[[content.cache.appcache]]
== content.cache.appcache
Whether support for the HTML 5 web application cache feature is enabled.
An application cache acts like an HTTP cache in some sense. For documents that use the application cache via JavaScript, the loader engine will first ask the application cache for the contents, before hitting the network.
The feature is described in details at: http://dev.w3.org/html5/spec/Overview.html#appcache

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

This setting is only available with the QtWebKit backend.

[[content.cache.maximum_pages]]
== content.cache.maximum_pages
The maximum number of pages to hold in the global memory page cache.
The Page Cache allows for a nicer user experience when navigating forth or back to pages in the forward/back history, by pausing and resuming up to _n_ pages.
For more information about the feature, please refer to: http://webkit.org/blog/427/webkit-page-cache-i-the-basics/

Default: empty

This setting is only available with the QtWebKit backend.

[[content.cache.size]]
== content.cache.size
Size of the HTTP network cache. Empty to use the default value.

Default: empty

[[content.cookies.accept]]
== content.cookies.accept
Control which cookies to accept.

Valid values:

 * +all+: Accept all cookies.
 * +no-3rdparty+: Accept cookies from the same origin only.
 * +no-unknown-3rdparty+: Accept cookies from the same origin only, unless a cookie is already set for the domain.
 * +never+: Don't accept cookies at all.

Default: +pass:[no-3rdparty]+

This setting is only available with the QtWebKit backend.

[[content.cookies.store]]
== content.cookies.store
Whether to store cookies. Note this option needs a restart with QtWebEngine on Qt < 5.9.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.default_encoding]]
== content.default_encoding
Default encoding to use for websites.
The encoding must be a string describing an encoding such as _utf-8_, _iso-8859-1_, etc.

Default: +pass:[iso-8859-1]+

[[content.developer_extras]]
== content.developer_extras
Enable extra tools for Web developers.
This needs to be enabled for `:inspector` to work and also adds an _Inspect_ entry to the context menu. For QtWebEngine, see `qutebrowser --help` instead.

Valid values:

 * +true+
 * +false+

Default: empty

This setting is only available with the QtWebKit backend.

[[content.dns_prefetch]]
== content.dns_prefetch
Whether to try to pre-fetch DNS entries to speed up browsing.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

This setting is only available with the QtWebKit backend.

[[content.frame_flattening]]
== content.frame_flattening
Whether to  expand each subframe to its contents.
This will flatten all the frames to become one scrollable page.

Valid values:

 * +true+
 * +false+

Default: empty

This setting is only available with the QtWebKit backend.

[[content.geolocation]]
== content.geolocation
Allow websites to request geolocations.

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

[[content.headers.custom]]
== content.headers.custom
Set custom headers for qutebrowser HTTP requests.

Default: empty

[[content.headers.do_not_track]]
== content.headers.do_not_track
Value to send in the `DNT` header.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.headers.referer]]
== content.headers.referer
Send the Referer header

Valid values:

 * +always+: Always send.
 * +never+: Never send; this is not recommended, as some sites may break.
 * +same-domain+: Only send for the same domain. This will still protect your privacy, but shouldn't break any sites.

Default: +pass:[same-domain]+

This setting is only available with the QtWebKit backend.

[[content.headers.user_agent]]
== content.headers.user_agent
User agent to send. Unset to send the default.

Default: empty

[[content.host_blocking.enabled]]
== content.host_blocking.enabled
Whether host blocking is enabled.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.host_blocking.lists]]
== content.host_blocking.lists
List of URLs of lists which contain hosts to block.

The file can be in one of the following formats:

- An `/etc/hosts`-like file
- One host per line
- A zip-file of any of the above, with either only one file, or a file named
  `hosts` (with any extension).


Default: +pass:[[&quot;https://www.malwaredomainlist.com/hostslist/hosts.txt&quot;, &quot;http://someonewhocares.org/hosts/hosts&quot;, &quot;http://winhelp2002.mvps.org/hosts.zip&quot;, &quot;http://malwaredomains.lehigh.edu/files/justdomains.zip&quot;, &quot;https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&amp;mimetype=plaintext&quot;]]+

[[content.host_blocking.whitelist]]
== content.host_blocking.whitelist
List of domains that should always be loaded, despite being ad-blocked.
Domains may contain * and ? wildcards and are otherwise required to exactly match the requested domain.
Local domains are always exempt from hostblocking.

Default: +pass:[[&quot;piwik.org&quot;]]+

[[content.hyperlink_auditing]]
== content.hyperlink_auditing
Enable or disable hyperlink auditing (`<a ping>`).

Valid values:

 * +true+
 * +false+

Default: empty

[[content.images]]
== content.images
Whether images are automatically loaded in web pages.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.javascript.alert]]
== content.javascript.alert
Show javascript alerts.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.javascript.can_access_clipboard]]
== content.javascript.can_access_clipboard
Whether JavaScript programs can read or write to the clipboard.
With QtWebEngine, writing the clipboard as response to a user interaction is always allowed.

Valid values:

 * +true+
 * +false+

Default: empty

[[content.javascript.can_close_windows]]
== content.javascript.can_close_windows
Whether JavaScript programs can close windows.

Valid values:

 * +true+
 * +false+

Default: empty

This setting is only available with the QtWebKit backend.

[[content.javascript.can_open_windows_automatically]]
== content.javascript.can_open_windows_automatically
Whether JavaScript programs can open new windows without user interaction.

Valid values:

 * +true+
 * +false+

Default: empty

[[content.javascript.enabled]]
== content.javascript.enabled
Enables or disables the running of JavaScript programs.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.javascript.log]]
== content.javascript.log
How to log javascript console messages.

Valid values:

 * +none+: Don't log messages.
 * +debug+: Log messages with debug level.
 * +info+: Log messages with info level.

Default: +pass:[debug]+

[[content.javascript.modal_dialog]]
== content.javascript.modal_dialog
Use the standard JavaScript modal dialog for `alert()` and `confirm()`

Valid values:

 * +true+
 * +false+

Default: empty

[[content.javascript.prompt]]
== content.javascript.prompt
Show javascript prompts.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.local_content_can_access_file_urls]]
== content.local_content_can_access_file_urls
Whether locally loaded documents are allowed to access other local urls.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.local_content_can_access_remote_urls]]
== content.local_content_can_access_remote_urls
Whether locally loaded documents are allowed to access remote urls.

Valid values:

 * +true+
 * +false+

Default: empty

[[content.local_storage]]
== content.local_storage
Whether support for HTML 5 local storage and Web SQL is enabled.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.media_capture]]
== content.media_capture
Allow websites to record audio/video.

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

This setting is only available with the QtWebEngine backend.

[[content.netrc_file]]
== content.netrc_file
Location of a netrc-file for HTTP authentication.
If unset, `~/.netrc` is used.

Default: empty

[[content.notifications]]
== content.notifications
Allow websites to show notifications.

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

[[content.pdfjs]]
== content.pdfjs
Enable pdf.js to view PDF files in the browser.
Note that the files can still be downloaded by clicking the download button in the pdf.js viewer.

Valid values:

 * +true+
 * +false+

Default: empty

[[content.plugins]]
== content.plugins
Enables or disables plugins in Web pages.

Valid values:

 * +true+
 * +false+

Default: empty

[[content.print_element_backgrounds]]
== content.print_element_backgrounds
Whether the background color and images are also drawn when the page is printed.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

On QtWebEngine, this setting requires Qt 5.8 or newer.

[[content.private_browsing]]
== content.private_browsing
Open new windows in private browsing mode which does not record visited pages.

Valid values:

 * +true+
 * +false+

Default: empty

[[content.proxy]]
== content.proxy
The proxy to use.
In addition to the listed values, you can use a `socks://...` or `http://...` URL.

Valid values:

 * +system+: Use the system wide proxy.
 * +none+: Don't use any proxy

Default: +pass:[system]+

[[content.proxy_dns_requests]]
== content.proxy_dns_requests
Whether to send DNS requests over the configured proxy.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

This setting is only available with the QtWebKit backend.

[[content.ssl_strict]]
== content.ssl_strict
Whether to validate SSL handshakes.

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

[[content.user_stylesheet]]
== content.user_stylesheet
User stylesheet to use (absolute filename or filename relative to the config directory). Will expand environment variables.

Default: empty

[[content.webgl]]
== content.webgl
Enables or disables WebGL.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[content.xss_auditing]]
== content.xss_auditing
Whether load requests should be monitored for cross-site scripting attempts.
Suspicious scripts will be blocked and reported in the inspector\'s JavaScript console. Enabling this feature might have an impact on performance.

Valid values:

 * +true+
 * +false+

Default: empty

[[downloads.location.directory]]
== downloads.location.directory
The directory to save downloads to.
If unset, a sensible os-specific default is used. Will expand environment variables.

Default: empty

[[downloads.location.prompt]]
== downloads.location.prompt
Whether to prompt the user for the download location.
If set to false, `download-directory` will be used.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[downloads.location.remember]]
== downloads.location.remember
Whether to remember the last used download directory.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[downloads.location.suggestion]]
== downloads.location.suggestion
What to display in the download filename input.

Valid values:

 * +path+: Show only the download path.
 * +filename+: Show only download filename.
 * +both+: Show download path and filename.

Default: +pass:[path]+

[[downloads.open_dispatcher]]
== downloads.open_dispatcher
The default program used to open downloads. If unset, the default internal handler is used.
Any `{}` in the string will be expanded to the filename, else the filename will be appended.

Default: empty

[[downloads.position]]
== downloads.position
Where to show the downloaded files.

Valid values:

 * +top+
 * +bottom+

Default: +pass:[top]+

[[downloads.remove_finished]]
== downloads.remove_finished
Number of milliseconds to wait before removing finished downloads. Will not be removed if value is -1.

Default: +pass:[-1]+

[[editor.command]]
== editor.command
The editor (and arguments) to use for the `open-editor` command.
The arguments get split like in a shell, so you can use `\"` or `\'` to quote them.
`{}` gets replaced by the filename of the file to be edited.

Default: +pass:[[&quot;gvim&quot;, &quot;-f&quot;, &quot;{}&quot;]]+

[[editor.encoding]]
== editor.encoding
Encoding to use for the editor.

Default: +pass:[utf-8]+

[[fonts.completion.category]]
== fonts.completion.category
Font used in the completion categories.

Default: +pass:[bold 8pt monospace]+

[[fonts.completion.entry]]
== fonts.completion.entry
Font used in the completion widget.

Default: +pass:[8pt monospace]+

[[fonts.debug_console]]
== fonts.debug_console
Font used for the debugging console.

Default: +pass:[8pt monospace]+

[[fonts.downloads]]
== fonts.downloads
Font used for the downloadbar.

Default: +pass:[8pt monospace]+

[[fonts.hints]]
== fonts.hints
Font used for the hints.

Default: +pass:[bold 13px monospace]+

[[fonts.keyhint]]
== fonts.keyhint
Font used in the keyhint widget.

Default: +pass:[8pt monospace]+

[[fonts.messages.error]]
== fonts.messages.error
Font used for error messages.

Default: +pass:[8pt monospace]+

[[fonts.messages.info]]
== fonts.messages.info
Font used for info messages.

Default: +pass:[8pt monospace]+

[[fonts.messages.warning]]
== fonts.messages.warning
Font used for warning messages.

Default: +pass:[8pt monospace]+

[[fonts.monospace]]
== fonts.monospace
Default monospace fonts.

Default: +pass:[xos4 Terminus, Terminus, Monospace, &quot;DejaVu Sans Mono&quot;, Monaco, &quot;Bitstream Vera Sans Mono&quot;, &quot;Andale Mono&quot;, &quot;Courier New&quot;, Courier, &quot;Liberation Mono&quot;, monospace, Fixed, Consolas, Terminal]+

[[fonts.prompts]]
== fonts.prompts
Font used for prompts.

Default: +pass:[8pt sans-serif]+

[[fonts.statusbar]]
== fonts.statusbar
Font used in the statusbar.

Default: +pass:[8pt monospace]+

[[fonts.tabs]]
== fonts.tabs
Font used in the tab bar.

Default: +pass:[8pt monospace]+

[[fonts.web.family.cursive]]
== fonts.web.family.cursive
Font family for cursive fonts.

Default: empty

[[fonts.web.family.fantasy]]
== fonts.web.family.fantasy
Font family for fantasy fonts.

Default: empty

[[fonts.web.family.fixed]]
== fonts.web.family.fixed
Font family for fixed fonts.

Default: empty

[[fonts.web.family.sans_serif]]
== fonts.web.family.sans_serif
Font family for sans-serif fonts.

Default: empty

[[fonts.web.family.serif]]
== fonts.web.family.serif
Font family for serif fonts.

Default: empty

[[fonts.web.family.standard]]
== fonts.web.family.standard
Font family for standard fonts.

Default: empty

[[fonts.web.size.default]]
== fonts.web.size.default
The default font size for regular text.

Default: +pass:[16]+

[[fonts.web.size.default_fixed]]
== fonts.web.size.default_fixed
The default font size for fixed-pitch text.

Default: +pass:[13]+

[[fonts.web.size.minimum]]
== fonts.web.size.minimum
The hard minimum font size.

Default: empty

[[fonts.web.size.minimum_logical]]
== fonts.web.size.minimum_logical
The minimum logical font size that is applied when zooming out.

Default: +pass:[6]+

[[hints.auto_follow]]
== hints.auto_follow
Controls when a hint can be automatically followed without the user pressing Enter.

Valid values:

 * +always+: Auto-follow whenever there is only a single hint on a page.
 * +unique-match+: Auto-follow whenever there is a unique non-empty match in either the hint string (word mode) or filter (number mode).
 * +full-match+: Follow the hint when the user typed the whole hint (letter, word or number mode) or the element's text (only in number mode).
 * +never+: The user will always need to press Enter to follow a hint.

Default: +pass:[unique-match]+

[[hints.auto_follow_timeout]]
== hints.auto_follow_timeout
A timeout (in milliseconds) to inhibit normal-mode key bindings after a successful auto-follow.

Default: empty

[[hints.border]]
== hints.border
CSS border value for hints.

Default: +pass:[1px solid #E3BE23]+

[[hints.chars]]
== hints.chars
Chars used for hint strings.

Default: +pass:[asdfghjkl]+

[[hints.dictionary]]
== hints.dictionary
The dictionary file to be used by the word hints.

Default: +pass:[/usr/share/dict/words]+

[[hints.find_implementation]]
== hints.find_implementation
Which implementation to use to find elements to hint.

Valid values:

 * +javascript+: Better but slower
 * +python+: Slightly worse but faster

Default: +pass:[python]+

[[hints.hide_unmatched_rapid_hints]]
== hints.hide_unmatched_rapid_hints
Controls hiding unmatched hints in rapid mode.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[hints.min_chars]]
== hints.min_chars
Minimum number of chars used for hint strings.

Default: +pass:[1]+

[[hints.mode]]
== hints.mode
Mode to use for hints.

Valid values:

 * +number+: Use numeric hints. (In this mode you can also type letters from the hinted element to filter and reduce the number of elements that are hinted.)
 * +letter+: Use the chars in the hints.chars setting.
 * +word+: Use hints words based on the html elements and the extra words.

Default: +pass:[letter]+

[[hints.next_regexes]]
== hints.next_regexes
A comma-separated list of regexes to use for 'next' links.

Default: +pass:[[&quot;\\bnext\\b&quot;, &quot;\\bmore\\b&quot;, &quot;\\bnewer\\b&quot;, &quot;\\b[&gt;\u2192\u226b]\\b&quot;, &quot;\\b(&gt;&gt;|\u00bb)\\b&quot;, &quot;\\bcontinue\\b&quot;]]+

[[hints.prev_regexes]]
== hints.prev_regexes
A comma-separated list of regexes to use for 'prev' links.

Default: +pass:[[&quot;\\bprev(ious)?\\b&quot;, &quot;\\bback\\b&quot;, &quot;\\bolder\\b&quot;, &quot;\\b[&lt;\u2190\u226a]\\b&quot;, &quot;\\b(&lt;&lt;|\u00ab)\\b&quot;]]+

[[hints.scatter]]
== hints.scatter
Whether to scatter hint key chains (like Vimium) or not (like dwb). Ignored for number hints.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[hints.uppercase]]
== hints.uppercase
Make chars in hint strings uppercase.

Valid values:

 * +true+
 * +false+

Default: empty

[[history_session_interval]]
== history_session_interval
The maximum time in minutes between two history items for them to be considered being from the same session. Use -1 to disable separation.

Default: +pass:[30]+

[[ignore_case]]
== ignore_case
Whether to find text on a page case-insensitively.

Valid values:

 * +always+: Search case-insensitively
 * +never+: Search case-sensitively
 * +smart+: Search case-sensitively if there are capital chars

Default: +pass:[smart]+

[[input.ambiguous_timeout]]
== input.ambiguous_timeout
Timeout (in milliseconds) for ambiguous key bindings.
If the current input forms both a complete match and a partial match, the complete match will be executed after this time.

Default: +pass:[500]+

[[input.forward_unbound_keys]]
== input.forward_unbound_keys
Whether to forward unbound keys to the webview in normal mode.

Valid values:

 * +all+: Forward all unbound keys.
 * +auto+: Forward unbound non-alphanumeric keys.
 * +none+: Don't forward any keys.

Default: +pass:[auto]+

[[input.insert_mode.auto_leave]]
== input.insert_mode.auto_leave
Whether to leave insert mode if a non-editable element is clicked.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[input.insert_mode.auto_load]]
== input.insert_mode.auto_load
Whether to automatically enter insert mode if an editable element is focused after page load.

Valid values:

 * +true+
 * +false+

Default: empty

[[input.insert_mode.plugins]]
== input.insert_mode.plugins
Whether to switch to insert mode when clicking flash and other plugins.

Valid values:

 * +true+
 * +false+

Default: empty

[[input.links_included_in_focus_chain]]
== input.links_included_in_focus_chain
Whether hyperlinks should be included in the keyboard focus chain.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[input.partial_timeout]]
== input.partial_timeout
Timeout (in milliseconds) for partially typed key bindings.
If the current input forms only partial matches, the keystring will be cleared after this time.

Default: +pass:[5000]+

[[input.rocker_gestures]]
== input.rocker_gestures
Whether to enable Opera-like mouse rocker gestures. This disables the context menu.

Valid values:

 * +true+
 * +false+

Default: empty

[[input.spatial_navigation]]
== input.spatial_navigation
Enables or disables the Spatial Navigation feature.
Spatial navigation consists in the ability to navigate between focusable elements in a Web page, such as hyperlinks and form controls, by using Left, Right, Up and Down arrow keys. For example, if a user presses the Right key, heuristics determine whether there is an element he might be trying to reach towards the right and which element he probably wants.

Valid values:

 * +true+
 * +false+

Default: empty

[[keyhint.blacklist]]
== keyhint.blacklist
Keychains that shouldn\'t be shown in the keyhint dialog.
Globs are supported, so `;*` will blacklist all keychains starting with `;`. Use `*` to disable keyhints.

Default: empty

[[keyhint.delay]]
== keyhint.delay
Time from pressing a key to seeing the keyhint dialog (ms)

Default: +pass:[500]+

[[messages.timeout]]
== messages.timeout
Time (in ms) to show messages in the statusbar for.
Set to 0 to never clear messages.

Default: +pass:[2000]+

[[messages.unfocused]]
== messages.unfocused
Whether to show messages in unfocused windows.

Valid values:

 * +true+
 * +false+

Default: empty

[[prompt.filebrowser]]
== prompt.filebrowser
Show a filebrowser in upload/download prompts.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[prompt.radius]]
== prompt.radius
The rounding radius for the edges of prompts.

Default: +pass:[8]+

[[scrolling.bar]]
== scrolling.bar
Show a scrollbar.

Valid values:

 * +true+
 * +false+

Default: empty

[[scrolling.smooth]]
== scrolling.smooth
Whether to enable smooth scrolling for web pages. Note smooth scrolling does not work with the `:scroll-px` command.

Valid values:

 * +true+
 * +false+

Default: empty

[[session_default_name]]
== session_default_name
The name of the session to save by default, or unset for the last loaded session.

Default: empty

[[statusbar.hide]]
== statusbar.hide
Whether to hide the statusbar unless a message is shown.

Valid values:

 * +true+
 * +false+

Default: empty

[[statusbar.padding]]
== statusbar.padding
Padding for the statusbar.

Default: +pass:[{&quot;top&quot;: 1, &quot;bottom&quot;: 1, &quot;left&quot;: 0, &quot;right&quot;: 0}]+

[[statusbar.position]]
== statusbar.position
The position of the status bar.

Valid values:

 * +top+
 * +bottom+

Default: +pass:[bottom]+

[[tabs.background]]
== tabs.background
Whether to open new tabs (middleclick/ctrl+click) in background.

Valid values:

 * +true+
 * +false+

Default: empty

[[tabs.close_mouse_button]]
== tabs.close_mouse_button
On which mouse button to close tabs.

Valid values:

 * +right+: Close tabs on right-click.
 * +middle+: Close tabs on middle-click.
 * +none+: Don't close tabs using the mouse.

Default: +pass:[middle]+

[[tabs.favicons.scale]]
== tabs.favicons.scale
Scale for favicons in the tab bar. The tab size is unchanged, so big favicons also require extra `tabs.padding`.

Default: +pass:[1.0]+

[[tabs.favicons.show]]
== tabs.favicons.show
Whether to show favicons in the tab bar.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[tabs.indicator_padding]]
== tabs.indicator_padding
Padding for indicators

Default: +pass:[{&quot;top&quot;: 2, &quot;bottom&quot;: 2, &quot;left&quot;: 0, &quot;right&quot;: 4}]+

[[tabs.last_close]]
== tabs.last_close
Behavior when the last tab is closed.

Valid values:

 * +ignore+: Don't do anything.
 * +blank+: Load a blank page.
 * +startpage+: Load the start page.
 * +default-page+: Load the default page.
 * +close+: Close the window.

Default: +pass:[ignore]+

[[tabs.mousewheel_switching]]
== tabs.mousewheel_switching
Switch between tabs using the mouse wheel.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[tabs.new_position.related]]
== tabs.new_position.related
How new tabs opened from another tab are positioned.

Valid values:

 * +prev+: Before the current tab.
 * +next+: After the current tab.
 * +first+: At the beginning.
 * +last+: At the end.

Default: +pass:[next]+

[[tabs.new_position.unrelated]]
== tabs.new_position.unrelated
How new tabs which aren't opened from another tab are positioned.

Valid values:

 * +prev+: Before the current tab.
 * +next+: After the current tab.
 * +first+: At the beginning.
 * +last+: At the end.

Default: +pass:[last]+

[[tabs.padding]]
== tabs.padding
Padding for tabs

Default: +pass:[{&quot;top&quot;: 0, &quot;bottom&quot;: 0, &quot;left&quot;: 5, &quot;right&quot;: 5}]+

[[tabs.position]]
== tabs.position
The position of the tab bar.

Valid values:

 * +top+
 * +bottom+
 * +left+
 * +right+

Default: +pass:[top]+

[[tabs.select_on_remove]]
== tabs.select_on_remove
Which tab to select when the focused tab is removed.

Valid values:

 * +prev+: Select the tab which came before the closed one (left in horizontal, above in vertical).
 * +next+: Select the tab which came after the closed one (right in horizontal, below in vertical).
 * +last-used+: Select the previously selected tab.

Default: +pass:[next]+

[[tabs.show]]
== tabs.show
When to show the tab bar.

Valid values:

 * +always+: Always show the tab bar.
 * +never+: Always hide the tab bar.
 * +multiple+: Hide the tab bar if only one tab is open.
 * +switching+: Show the tab bar when switching tabs.

Default: +pass:[always]+

[[tabs.show_switching_delay]]
== tabs.show_switching_delay
Time to show the tab bar before hiding it when tabs.show is set to 'switching'.

Default: +pass:[800]+

[[tabs.tabs_are_windows]]
== tabs.tabs_are_windows
Whether to open windows instead of tabs.

Valid values:

 * +true+
 * +false+

Default: empty

[[tabs.title.alignment]]
== tabs.title.alignment
Alignment of the text inside of tabs

Valid values:

 * +left+
 * +right+
 * +center+

Default: +pass:[left]+

[[tabs.title.format]]
== tabs.title.format
The format to use for the tab title. The following placeholders are defined:

* `{perc}`: The percentage as a string like `[10%]`.
* `{perc_raw}`: The raw percentage, e.g. `10`
* `{title}`: The title of the current web page
* `{title_sep}`: The string ` - ` if a title is set, empty otherwise.
* `{index}`: The index of this tab.
* `{id}`: The internal tab ID of this tab.
* `{scroll_pos}`: The page scroll position.
* `{host}`: The host of the current web page.
* `{backend}`: Either ''webkit'' or ''webengine''
* `{private}` : Indicates when private mode is enabled.


Default: +pass:[{index}: {title}]+

[[tabs.title.format_pinned]]
== tabs.title.format_pinned
The format to use for the tab title for pinned tabs. The same placeholders like for title-format are defined.

Default: +pass:[{index}]+

[[tabs.width.bar]]
== tabs.width.bar
The width of the tab bar if it's vertical, in px or as percentage of the window.

Default: +pass:[20%]+

[[tabs.width.indicator]]
== tabs.width.indicator
Width of the progress indicator (0 to disable).

Default: +pass:[3]+

[[tabs.width.pinned]]
== tabs.width.pinned
The width for pinned tabs with a horizontal tabbar, in px.

Default: +pass:[43]+

[[tabs.wrap]]
== tabs.wrap
Whether to wrap when changing tabs.

Valid values:

 * +true+
 * +false+

Default: +pass:[true]+

[[url.auto_search]]
== url.auto_search
Whether to start a search when something else than a URL is entered.

Valid values:

 * +naive+: Use simple/naive check.
 * +dns+: Use DNS requests (might be slow!).
 * +never+: Never search automatically.

Default: +pass:[naive]+

[[url.default_page]]
== url.default_page
The page to open if :open -t/-b/-w is used without URL. Use `about:blank` for a blank page.

Default: +pass:[https://start.duckduckgo.com/]+

[[url.incdec_segments]]
== url.incdec_segments
The URL segments where `:navigate increment/decrement` will search for a number.

Valid values:

 * +host+
 * +path+
 * +query+
 * +anchor+

Default: +pass:[[&quot;path&quot;, &quot;query&quot;]]+

[[url.new_instance_open_target]]
== url.new_instance_open_target
How to open links in an existing instance if a new one is launched.

Valid values:

 * +tab+: Open a new tab in the existing window and activate the window.
 * +tab-bg+: Open a new background tab in the existing window and activate the window.
 * +tab-silent+: Open a new tab in the existing window without activating the window.
 * +tab-bg-silent+: Open a new background tab in the existing window without activating the window.
 * +window+: Open in a new window.

Default: +pass:[tab]+

[[url.new_instance_open_target_window]]
== url.new_instance_open_target_window
Which window to choose when opening links as new tabs.

Valid values:

 * +first-opened+: Open new tabs in the first (oldest) opened window.
 * +last-opened+: Open new tabs in the last (newest) opened window.
 * +last-focused+: Open new tabs in the most recently focused window.
 * +last-visible+: Open new tabs in the most recently visible window.

Default: +pass:[last-focused]+

[[url.searchengines]]
== url.searchengines
Definitions of search engines which can be used via the address bar.
The searchengine named `DEFAULT` is used when `url.auto_search` is turned on and something else than a URL was entered to be opened. Other search engines can be used by prepending the search engine name to the search term, e.g. `:open google qutebrowser`. The string `{}` will be replaced by the search term, use `{{` and `}}` for literal `{`/`}` signs.

Default: +pass:[{&quot;DEFAULT&quot;: &quot;https://duckduckgo.com/?q={}&quot;}]+

[[url.start_pages]]
== url.start_pages
The default page(s) to open at the start.

Default: +pass:[[&quot;https://start.duckduckgo.com&quot;]]+

[[url.yank_ignored_parameters]]
== url.yank_ignored_parameters
The URL parameters to strip with :yank url.

Default: +pass:[[&quot;ref&quot;, &quot;utm_source&quot;, &quot;utm_medium&quot;, &quot;utm_campaign&quot;, &quot;utm_term&quot;, &quot;utm_content&quot;]]+

[[window.hide_wayland_decoration]]
== window.hide_wayland_decoration
Hide the window decoration when using wayland (requires restart)

Valid values:

 * +true+
 * +false+

Default: empty

[[window.title_format]]
== window.title_format
The format to use for the window title. The following placeholders are defined:

* `{perc}`: The percentage as a string like `[10%]`.
* `{perc_raw}`: The raw percentage, e.g. `10`
* `{title}`: The title of the current web page
* `{title_sep}`: The string ` - ` if a title is set, empty otherwise.
* `{id}`: The internal window ID of this window.
* `{scroll_pos}`: The page scroll position.
* `{host}`: The host of the current web page.
* `{backend}`: Either ''webkit'' or ''webengine''
* `{private}` : Indicates when private mode is enabled.


Default: +pass:[{perc}{title}{title_sep}qutebrowser]+

[[zoom.default]]
== zoom.default
The default zoom level.

Default: +pass:[100%]+

[[zoom.levels]]
== zoom.levels
The available zoom levels.

Default: +pass:[[&quot;25%&quot;, &quot;33%&quot;, &quot;50%&quot;, &quot;67%&quot;, &quot;75%&quot;, &quot;90%&quot;, &quot;100%&quot;, &quot;110%&quot;, &quot;125%&quot;, &quot;150%&quot;, &quot;175%&quot;, &quot;200%&quot;, &quot;250%&quot;, &quot;300%&quot;, &quot;400%&quot;, &quot;500%&quot;]]+

[[zoom.mouse_divider]]
== zoom.mouse_divider
How much to divide the mouse wheel movements to translate them into zoom increments.

Default: +pass:[512]+

[[zoom.text_only]]
== zoom.text_only
Whether the zoom factor on a frame applies only to the text or to all content.

Valid values:

 * +true+
 * +false+

Default: empty

This setting is only available with the QtWebKit backend.
